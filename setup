#!/bin/bash

set -e

RED='\033[31;1m'
GREEN='\033[32;1m'
YELLOW='\033[33;1m'
BLUE='\033[34;1m'
NC='\033[0m'

# Check if there is a preiously existing version of ernest
EXISTING=$(docker ps -q -f name=api-gateway)
if [[ $EXISTING = *[!\ ]* ]]; then
  echo "You already have an existing ernest instance running"
  echo "ernest will be upgraded to last version."
  TOKEN=$(docker exec $EXISTING sh -c 'echo "$JWT_SECRET"')
  CRYPTO_KEY=`docker exec $EXISTING sh -c 'echo "$ERNEST_CRYPTO_KEY"'`

  docker-compose down
  git checkout docker-compose.yml
  git checkout config/nginx/ernest.local
  git checkout master
  git pull
fi

command_exists () {
	if ! type "$1" &> /dev/null; then
		printf "\n$RED%s$NC %s\n$1 %s\n%s" "[FAIL]" "Prerequisite requirements not met" "not found!" "Please make sure all requirements are installed."
    exit 1
  fi
}

printf "\n$BLUE%s\n%s$NC\n\n" "Ernest Setup Tool" "================="

# input
while [[ -z $ERNESTHOSTNAME ]]; do
	printf "$BLUE%s$NC " "Hostname:"
	read ERNESTHOSTNAME
done
while [[ -z $ERNESTUSER ]]; do
	printf "$BLUE%s$NC " "Username:"
	read ERNESTUSER
done
while [[ -z $ERNESTPASSWORD ]]; do
	printf "$BLUE%s$NC " "Password:"
	read -s ERNESTPASSWORD
	echo
done

# prereqs
printf "\n%s " "Checking prerequisites..."
command_exists wget
command_exists openssl
command_exists docker
command_exists docker-compose
printf "$GREEN%s$NC\n" "done"

printf "\n$GREEN%s$NC\n\n" "Starting Ernest"

# license
LICENSE=$1
if ! [[ -z "${LICENSE// }" ]]; then
  if [ ! -f $LICENSE ]; then
		printf "$YELLOW%s$NC %s\n" "[WARNING]" "No license found"
    exit
  fi
fi

openssl req \
    -new \
    -newkey rsa:4096 \
    -days 365 \
    -nodes \
    -x509 \
    -subj "/C=UK/ST=London/L=London/O=ErnestIO/CN=$ERNESTHOSTNAME" \
    -keyout ./config/nginx/ernest.key \
    -out ./config/nginx/ernest.crt &> /dev/null

sed -i.bak "s/ERNESTHOSTNAME/$ERNESTHOSTNAME/g" ./config/nginx/ernest.local && rm ./config/nginx/ernest.local.bak

# Setup a random JWT Token for api-gateway
if [[ -z $TOKEN ]]; then
  echo "Generating new api token secret"
  TOKEN=`openssl rand -base64 32`
fi
sed -i.bak "s:GENERATEDJWTSECRET:$TOKEN:g" docker-compose.yml && rm docker-compose.yml.bak

# Setup a random CRIPTO_KEY
if [[ -z $CRYPTO_KEY ]]; then
  CRYPTO_KEY=`openssl rand -base64 24`
fi
sed -i.bak "s:CRYPTO_KEY_TEMPLATE:$CRYPTO_KEY:g" docker-compose.yml && rm docker-compose.yml.bak

# Make volume for postgres data
mkdir -p postgres/data

# run docker compose, add a '-d' to run in daemon mode
docker-compose up -d

# Download the natsc tool
wget https://s3-eu-west-1.amazonaws.com/ernest-tools/natsc-`uname` -O natsc &> /dev/null
chmod +x ./natsc

# NOTE: Wait for backend services to become available.
./natsc request -s nats://127.0.0.1:4222 -t 5 -r 99 'authorization.find' '{}' &> /dev/null
./natsc request -s nats://127.0.0.1:4222 -t 5 -r 99 'datacenter.find' '{}' &> /dev/null
# setup admin account
./natsc request -s nats://127.0.0.1:4222 -t 5 -r 99 'user.set' "{\"username\": \"$ERNESTUSER\", \"password\": \"$ERNESTPASSWORD\", \"admin\":true}" &> /dev/null

printf "\n$GREEN%s$NC\n\n" "Setup complete!"
printf "%s $BLUE%s$NC\n" "Please download the latest client from" "https://github.com/ernestio/ernest-cli/releases"
printf "%s $BLUE%s$NC %s $BLUE%s$NC %s\n" "Then configure with" "ernest-cli setup" "providing" "https://$ERNESTHOSTNAME" "as the target."
